{"version":3,"sources":["user_interface/navigation.tsx","user_interface/playlistPreview.tsx","user_interface/home.tsx","user_interface/remix.tsx","user_interface/library.tsx","user_interface/window.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Navigation","useState","setPage","handleCurrentPage","currentPage","console","log","Box","id","to","onClick","sx","color","PlaylistPreview","component","Typography","Home","Remix","Button","Library","Window","path","element","theme","createTheme","typography","fontFamily","join","App","ThemeProvider","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ApolloClient","uri","cache","InMemoryCache","query","gql","result","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85fa5f61.chunk.js","sourcesContent":["/* React */\r\nimport React, { useState } from 'react';\r\n\r\n/* Material-UI */\r\nimport { Box } from '@material-ui/core';\r\n\r\n/* Navigation icons */\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport MusicNoteIcon from '@mui/icons-material/MusicNote';\r\nimport LibraryMusicIcon from '@mui/icons-material/LibraryMusic';\r\n\r\n\r\n/* Router */\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/* Styling */\r\nimport '../styling/navigation.css';\r\n\r\nconst Navigation = ({\r\n    \r\n}) => {\r\n  const [page, setPage] = useState('')\r\n\r\n  const handleCurrentPage = (currentPage: string) => {\r\n    console.log(\"setting page to \" + currentPage);\r\n    setPage(currentPage)\r\n  }\r\n\r\n  return(\r\n    <Box\r\n      id='navigation'\r\n    >\r\n      <Link \r\n          to={'/home'}\r\n      >\r\n        <Box\r\n          onClick={()=> {handleCurrentPage('home')}}\r\n          id='home-icon'\r\n        >\r\n          <HomeIcon sx={{ color: \"#1DB954\" }}/>\r\n        </Box>\r\n      </Link>\r\n      \r\n      <Link \r\n          to={'/remix'}\r\n      >\r\n        <Box\r\n          onClick={()=> {handleCurrentPage('remix')}}\r\n          id='remix-icon'\r\n        >\r\n        <MusicNoteIcon sx={{ color: \"#1DB954\" }}/>\r\n        </Box>\r\n      </Link>\r\n\r\n      <Link \r\n          to={'/library'}\r\n      >\r\n        <Box\r\n          onClick={()=> {handleCurrentPage('library')}}\r\n          id='library-icon'\r\n        >\r\n          <LibraryMusicIcon sx={{ color: \"#1DB954\" }}/>\r\n        </Box>\r\n      </Link>\r\n    </Box>\r\n    )\r\n}\r\n\r\nexport default Navigation;\r\n","import { Box } from '@material-ui/core';\r\nimport { Typography } from '@mui/material';\r\nimport React from 'react';\r\n\r\nimport PlayCircleIcon from '@mui/icons-material/PlayCircle';\r\n\r\nimport Ariana from '../images/ariana.jpg';\r\n\r\nimport '../styling/playlistPreview.css';\r\n\r\nconst PlaylistPreview = ({\r\n    \r\n}) => {\r\n\r\n  return(\r\n    <Box\r\n      id='playlist-container'\r\n    >\r\n      <Box\r\n        id='playlist-image'\r\n        component='img'\r\n      />\r\n      <Box\r\n        id='playlist-information'\r\n      >\r\n        <Box>\r\n          <Typography id='playlist'>Playlist</Typography>\r\n          <Typography id='playlist-name'>Playlist Name</Typography>\r\n        </Box>\r\n        <PlayCircleIcon sx={{ color: \"#1DB954\" }}/>\r\n      </Box>\r\n    </Box>\r\n    )\r\n}\r\n\r\nexport default PlaylistPreview;\r\n","import { Box } from '@material-ui/core';\r\nimport { Typography } from '@mui/material';\r\n\r\nimport PlaylistPreview from './playlistPreview';\r\nimport '../styling/home.css';\r\n\r\nconst Home = () => {\r\n\r\n  return(\r\n    <Box\r\n      id='home-window'\r\n    >\r\n      <Box\r\n        id='home'\r\n      >\r\n        <Typography id='user-name'>Hello</Typography>\r\n        <Box\r\n          id='playlist-preview-container'\r\n        >\r\n          <PlaylistPreview></PlaylistPreview>\r\n          <PlaylistPreview></PlaylistPreview>\r\n          <PlaylistPreview></PlaylistPreview>\r\n          <PlaylistPreview></PlaylistPreview>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import { \r\n  Box,\r\n  Button\r\n} from '@material-ui/core';\r\n\r\nimport '../styling/remix.css';\r\n\r\nimport Navigation from './navigation';\r\n\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\n\r\n\r\n// const handleClick = () => {\r\n//   return fetch(\"http://localhost:5000/testing\", {\r\n//     method: 'POST',\r\n//     headers: {\r\n//       'Content-Type': 'application/json'\r\n//     },\r\n//     body: JSON.stringify({\r\n//       'value': 'ernest'\r\n//     })\r\n//   })\r\n//   .then(response => response.json())\r\n//   .then(data => {\r\n//     setText(data['name'])\r\n//     console.log('the data: ', data)\r\n//   }).catch(error => console.error('Error', error))\r\n// }\r\n\r\nconst Remix = ({\r\n\r\n  \r\n    \r\n}) => {\r\n\r\n  return(\r\n    <Box\r\n      id='remix-window'\r\n    >\r\n      <Box\r\n        id='remix'\r\n      >\r\n        <Button>Upload</Button>\r\n      </Box>\r\n    </Box>\r\n    )\r\n}\r\n\r\nexport default Remix;\r\n","import { \r\n  Box\r\n} from '@material-ui/core';\r\n\r\nimport '../styling/library.css';\r\n\r\nconst Library = () => {\r\n\r\n  return(\r\n    <Box\r\n      id='library-window'\r\n    >\r\n      <Box\r\n        id='library'\r\n      >\r\n      </Box>\r\n    </Box>\r\n    )\r\n}\r\n\r\nexport default Library;\r\n","import { \r\n  Box\r\n} from '@material-ui/core';\r\n\r\nimport '../styling/window.css';\r\n\r\nimport Navigation from './navigation';\r\nimport Home from './home';\r\nimport Remix from './remix';\r\nimport Library from './library';\r\n\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nconst Window = ({\r\n    \r\n}) => {\r\n\r\n  return(\r\n    <Box\r\n      id=\"window\"\r\n    >\r\n      <Navigation/>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n      </Routes>\r\n      <Routes>\r\n        <Route path=\"/home\" element={<Home />} />\r\n      </Routes>\r\n      <Routes>\r\n        <Route path=\"/remix\" element={<Remix />} />\r\n      </Routes>\r\n      <Routes>\r\n        <Route path=\"/library\" element={<Library />} />\r\n      </Routes>\r\n    </Box>\r\n    )\r\n}\r\n\r\nexport default Window;\r\n","import React, { useState } from 'react';\r\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nimport './App.css'; \r\nimport Window from './user_interface/window';\r\n\r\nfunction api(){\r\n  return fetch(\"http://localhost:5000/testing\", {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      'value': 'ernest'\r\n    })\r\n  })\r\n  .then(response => response.json())\r\n  .then(data => {\r\n    console.log('the data: ', data)\r\n  }).catch(error => console.error('Error', error))\r\n}\r\n\r\nconst theme = createTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      \"Arial\"\r\n    ].join(\",\")\r\n  }\r\n});\r\n\r\nconst App = ({\r\n    \r\n}) => {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className=\"App\">\r\n        <Window/>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  useQuery,\r\n  gql\r\n} from \"@apollo/client\";\r\n\r\nconst client = new ApolloClient({\r\n  uri: 'https://48p1r2roz4.sse.codesandbox.io',\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nclient\r\n  .query({\r\n    query: gql`\r\n      query GetRates {\r\n        rates(currency: \"USD\") {\r\n          currency\r\n        }\r\n      }\r\n    `\r\n  })\r\n  .then(result => {\r\n    console.log(\"hola\")\r\n    console.log(result)\r\n  });\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
{"version":3,"sources":["user_interface/loading.tsx","color/loading.js","App.tsx","reportWebVitals.js","index.tsx"],"names":["useStyles","makeStyles","loadingText","color","fontSize","fontFamily","Loading","classes","Box","display","justifyContent","alignItems","bgcolor","height","Typography","className","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAQMA,EAAYC,YAAW,CAC3BC,YAAa,CACXC,MAAO,UACPC,SAAU,OACVC,WAAY,8BA0BDC,EAtBC,SAAC,GAEV,eACL,IAAMC,EAAUP,IAEhB,OACE,cAACQ,EAAA,EAAD,CACEC,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXC,QC1BsB,UD2BtBC,OAAO,UALT,SAOE,cAACC,EAAA,EAAD,CACEC,UAAWR,EAAQL,YADrB,2BERN,IA8Bec,EA9BH,SAAC,GAEN,eACL,MAAwBC,mBAAS,IAAjC,6BAoBA,OACE,qBAAKF,UAAU,MAAf,SACE,cAAC,EAAD,OClCSG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.00d5d487.chunk.js","sourcesContent":["import { \r\n  Box,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { LOADINGCOLOR } from '../color/loading.js';\r\n\r\nconst useStyles = makeStyles({\r\n  loadingText: {\r\n    color: '#E8E8E8',\r\n    fontSize: '50px',\r\n    fontFamily: 'Varela Round, sans-serif',\r\n  },\r\n});\r\n\r\nconst Loading = ({\r\n    \r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return(\r\n    <Box\r\n      display='flex'\r\n      justifyContent='center'\r\n      alignItems='center'\r\n      bgcolor={LOADINGCOLOR}\r\n      height='inherit'\r\n    >\r\n      <Typography\r\n        className={classes.loadingText}\r\n      >\r\n        LOADING...\r\n      </Typography>\r\n    </Box>\r\n    )\r\n}\r\n\r\nexport default Loading;\r\n","export const LOADINGCOLOR = '#000000';","import React, { useState } from 'react';\r\n\r\nimport './App.css'; \r\nimport Loading from './user_interface/loading';\r\n\r\nfunction api(){\r\n  return fetch(\"http://localhost:5000/testing\", {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      'value': 'ernest'\r\n    })\r\n  })\r\n  .then(response => response.json())\r\n  .then(data => {\r\n    console.log('the data: ', data)\r\n  }).catch(error => console.error('Error', error))\r\n}\r\n\r\nconst App = ({\r\n    \r\n}) => {\r\n  const [text, setText] = useState(\"\");\r\n\r\n\r\n   const handleClick = () => {\r\n      return fetch(\"http://localhost:5000/testing\", {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          'value': 'ernest'\r\n        })\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setText(data['name'])\r\n        console.log('the data: ', data)\r\n      }).catch(error => console.error('Error', error))\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Loading/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
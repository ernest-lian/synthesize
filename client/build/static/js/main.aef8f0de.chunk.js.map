{"version":3,"sources":["images/sunset.gif","user_interface/home.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["useStyles","makeStyles","backgroundImage","background","backgroundSize","backgroundRepeat","backgroundPosition","backgroundColor","backgroundGradient","logoBoxWrapper","borderTopLeftRadius","borderBottomLeftRadius","loginBoxWrapper","borderTopRightRadius","borderBottomRightRadius","homeScreenText","fontFamily","fontSize","color","loginButton","Loading","classes","Box","className","display","justifyContent","alignItems","height","flexDirection","width","bgcolor","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAAe,MAA0B,mC,OCWnCA,EAAYC,YAAW,CAC3BC,gBAAiB,CACfA,gBAAgB,OAAD,OAASC,EAAT,KACfC,eAAgB,QAChBC,iBAAkB,YAClBC,mBAAoB,SACpBC,gBAAiB,oBAEnBC,mBAAoB,CAClBL,WAAY,6CAEdM,eAAgB,CACdC,oBAAqB,OACrBC,uBAAwB,QAE1BC,gBAAiB,CACfC,qBAAsB,OACtBC,wBAAyB,QAE3BC,eAAgB,CACdC,WAAY,wBACZC,SAAU,OACVC,MAAO,SAETC,YAAa,CACXjB,gBAAiB,wEA4CNkB,EAxCC,SAAC,GAEV,eACL,IAAMC,EAAUrB,IAEhB,OACE,cAACsB,EAAA,EAAD,CACEC,UAAWF,EAAQb,mBACnBgB,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXC,OAAO,UALT,SAOE,eAACL,EAAA,EAAD,CACEE,QAAQ,OACRI,cAAc,MACdC,MAAM,MACNF,OAAO,MAJT,UAME,cAACL,EAAA,EAAD,CACEC,UAAWF,EAAQZ,eACnBoB,MAAM,MACNF,OAAO,OACPG,QAAQ,QAJV,SAME,mBAAGP,UAAWF,EAAQN,eAAtB,0BAEF,cAACO,EAAA,EAAD,CACEC,UAAWF,EAAQT,gBACnBiB,MAAM,MACNF,OAAO,OACPG,QAAQ,QAJV,SAME,mBAAGP,UAAWF,EAAQN,eAAtB,gCCnDV,IA8BegB,EA9BH,SAAC,GAEN,eACL,MAAwBC,mBAAS,IAAjC,6BAoBA,OACE,qBAAKT,UAAU,MAAf,SACE,cAAC,EAAD,OCnCSU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.aef8f0de.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sunset.d4eba36f.gif\";","import { \n  Box,\n  Typography,\n  Button\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { LOADINGCOLOR } from '../color/loading.js';\n\nimport background from '../images/sunset.gif';\n\nconst useStyles = makeStyles({\n  backgroundImage: {\n    backgroundImage: `url(${background})`,\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    backgroundColor: 'rgb(254,253,163)'\n  },\n  backgroundGradient: {\n    background: 'linear-gradient(to top, #b993d6, #8ca6db)'\n  },\n  logoBoxWrapper: {\n    borderTopLeftRadius: '20px',\n    borderBottomLeftRadius: '20px'\n  },\n  loginBoxWrapper: {\n    borderTopRightRadius: '20px',\n    borderBottomRightRadius: '20px'\n  },\n  homeScreenText: {\n    fontFamily: 'Open Sans, sans-serif',\n    fontSize: '30px',\n    color: 'white'\n  },\n  loginButton: {\n    backgroundImage: 'linear-gradient(to right, #DAE2F8 0%, #D6A4A4  51%, #DAE2F8  100%)'         \n  }\n});\n\nconst Loading = ({\n    \n}) => {\n  const classes = useStyles();\n\n  return(\n    <Box\n      className={classes.backgroundGradient}\n      display='flex'\n      justifyContent='center'\n      alignItems='center'\n      height='inherit'\n    >\n      <Box\n        display='flex'\n        flexDirection='row'\n        width='75%'\n        height='75%'\n      >\n        <Box\n          className={classes.logoBoxWrapper}\n          width='50%'\n          height='100%'\n          bgcolor='white'\n        >\n          <p className={classes.homeScreenText}>synthesize</p>\n        </Box>\n        <Box\n          className={classes.loginBoxWrapper}\n          width='50%'\n          height='100%'\n          bgcolor='white'\n        >\n          <p className={classes.homeScreenText}>synthesize</p>\n        </Box>\n      </Box>\n    </Box>\n    )\n}\n\nexport default Loading;\n","import React, { useState } from 'react';\n\nimport './App.css'; \nimport Loading from './user_interface/loading';\nimport Home from './user_interface/home';\n\nfunction api(){\n  return fetch(\"http://localhost:5000/testing\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      'value': 'ernest'\n    })\n  })\n  .then(response => response.json())\n  .then(data => {\n    console.log('the data: ', data)\n  }).catch(error => console.error('Error', error))\n}\n\nconst App = ({\n    \n}) => {\n  const [text, setText] = useState(\"\");\n\n\n   const handleClick = () => {\n      return fetch(\"http://localhost:5000/testing\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'value': 'ernest'\n        })\n      })\n      .then(response => response.json())\n      .then(data => {\n        setText(data['name'])\n        console.log('the data: ', data)\n      }).catch(error => console.error('Error', error))\n  }\n\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
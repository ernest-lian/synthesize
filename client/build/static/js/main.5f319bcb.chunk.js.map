{"version":3,"sources":["user_interface/loading.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Loading","Button","color","App","useState","text","setText","className","onClick","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAWeA,EARC,SAAC,GAGf,OADK,eAEH,cAACC,EAAA,EAAD,CAAQC,MAAM,UAAd,4BCcJ,IAgCeC,EAhCH,SAAC,GAEN,qBACmBC,mBAAS,IAD7B,mBACGC,EADH,KACSC,EADT,KAqBJ,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,4BAAIF,IACJ,wBAAQG,QAAS,kBApBVC,MAAM,gCAAiC,CAC5CC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB,MAAS,aAGZC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJZ,EAAQY,EAAI,MACZC,QAAQC,IAAI,aAAcF,MACzBG,OAAM,SAAAC,GAAK,OAAIH,QAAQG,MAAM,QAASA,SAI3C,QCjCWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5f319bcb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\n\nconst Loading = ({\n    \n}) => {\n  return(\n    <Button color=\"primary\"> Hello world </Button>\n  )\n}\n\nexport default Loading;\n","import React, { useState } from 'react';\n\nimport './App.css'; \nimport Loading from './user_interface/loading.tsx'\n\nfunction api(){\n  return fetch(\"http://localhost:5000/testing\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      'value': 'ernest'\n    })\n  })\n  .then(response => response.json())\n  .then(data => {\n    console.log('the data: ', data)\n  }).catch(error => console.error('Error', error))\n}\n\nconst App = ({\n    \n}) => {\n  const [text, setText] = useState(\"\");\n\n\n   const handleClick = () => {\n      return fetch(\"http://localhost:5000/testing\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'value': 'ernest'\n        })\n      })\n      .then(response => response.json())\n      .then(data => {\n        setText(data['name'])\n        console.log('the data: ', data)\n      }).catch(error => console.error('Error', error))\n  }\n\n  return (\n    <div className=\"App\">\n      <Loading/>\n      <p>{text}</p>\n      <button onClick={() => handleClick()}></button>;\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
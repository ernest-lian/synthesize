{"version":3,"sources":["images/sunset.gif","user_interface/home.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["useStyles","makeStyles","backgroundImage","background","backgroundSize","backgroundRepeat","backgroundPosition","backgroundColor","Loading","classes","Box","className","display","justifyContent","alignItems","height","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAAe,MAA0B,mC,OCUnCA,EAAYC,YAAW,CAC3BC,gBAAiB,CACfA,gBAAgB,OAAD,OAASC,EAAT,KACfC,eAAgB,QAChBC,iBAAkB,YAClBC,mBAAoB,SACpBC,gBAAiB,sBAsBNC,EAlBC,SAAC,GAEV,eACL,IAAMC,EAAUT,IAEhB,OACE,cAACU,EAAA,EAAD,CACEC,UAAWF,EAAQP,gBACnBU,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXC,OAAO,UALT,yBCJJ,IA8BeC,EA9BH,SAAC,GAEN,eACL,MAAwBC,mBAAS,IAAjC,6BAoBA,OACE,qBAAKN,UAAU,MAAf,SACE,cAAC,EAAD,OCnCSO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fdd88fc3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sunset.d4eba36f.gif\";","import { \n  Box,\n  Typography\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { LOADINGCOLOR } from '../color/loading.js';\n\nimport background from '../images/sunset.gif';\n\nconst useStyles = makeStyles({\n  backgroundImage: {\n    backgroundImage: `url(${background})`,\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    backgroundColor: 'rgb(254,253,163)'\n  }\n});\n\nconst Loading = ({\n    \n}) => {\n  const classes = useStyles();\n\n  return(\n    <Box\n      className={classes.backgroundImage}\n      display='flex'\n      justifyContent='center'\n      alignItems='center'\n      height='inherit'\n    >\n    synthesize\n    </Box>\n    )\n}\n\nexport default Loading;\n","import React, { useState } from 'react';\n\nimport './App.css'; \nimport Loading from './user_interface/loading';\nimport Home from './user_interface/home';\n\nfunction api(){\n  return fetch(\"http://localhost:5000/testing\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      'value': 'ernest'\n    })\n  })\n  .then(response => response.json())\n  .then(data => {\n    console.log('the data: ', data)\n  }).catch(error => console.error('Error', error))\n}\n\nconst App = ({\n    \n}) => {\n  const [text, setText] = useState(\"\");\n\n\n   const handleClick = () => {\n      return fetch(\"http://localhost:5000/testing\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'value': 'ernest'\n        })\n      })\n      .then(response => response.json())\n      .then(data => {\n        setText(data['name'])\n        console.log('the data: ', data)\n      }).catch(error => console.error('Error', error))\n  }\n\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
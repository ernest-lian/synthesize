{"version":3,"sources":["user_interface/navigation.tsx","ctrl.jpg","user_interface/vocals.wav","user_interface/bass.wav","user_interface/other.wav","user_interface/drums.wav","user_interface/remix/stemRemix.tsx","user_interface/library/remixComponent.tsx","user_interface/library/library.tsx","user_interface/test_drive.mp3","user_interface/currentlyPlayingMobile.tsx","user_interface/window.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["styles","makeStyles","selectedNavigation","nonSelectedNavigation","Navigation","classes","useState","page","setPage","handleCurrentPage","currentPage","console","log","Box","id","to","style","textDecoration","color","onClick","className","fontSize","Typography","StemRemix","favorite","setFavorite","playing","setPlaying","audioContext","AudioContext","otherAudio","Audio","other","otherGainNode","GainNode","gain","otherVolume","document","getElementById","vocalAudio","vocals","vocalGainNode","vocalVolume","bassAudio","bass","bassGainNode","bassVolume","drumsAudio","drums","drumsGainNode","drumsVolume","a","createMediaElementSource","connect","destination","setupEventListeners","setupContext","handleSetPlaying","play","handleSetFavorite","addEventListener","event","element","target","parseFloat","value","src","Ctrl","alt","display","flexDirection","justifyContent","Slider","defaultValue","valueLabelDisplay","borderRadius","height","width","p","icon","faMicrophoneLines","type","min","max","step","faDrum","faGuitar","faMusic","RemixComponent","props","number","cover","title","artist","Library","CurrentlyPlayingMobile","drive","alignSelf","pl","textAlign","Window","path","theme","createTheme","typography","fontFamily","join","App","useEffect","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6807fb76.chunk.js","sourcesContent":["/* React */\r\nimport { useState } from 'react';\r\n\r\n/* Material-UI */\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n/* Navigation icons */\r\nimport MusicNoteIcon from '@mui/icons-material/MusicNote';\r\nimport LibraryMusicIcon from '@mui/icons-material/LibraryMusic';\r\n\r\n/* Router */\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/* Styling */\r\nimport '../styling/navigation.css';\r\n\r\nconst styles = makeStyles({\r\n  selectedNavigation: {\r\n      \"background-color\": \"white\",\r\n      \"border-radius\": \"20px\",\r\n      \"padding\": \"5px\"\r\n  },\r\n  nonSelectedNavigation: {\r\n    \"border-radius\": \"20px\",\r\n    \"padding\": \"5px\"\r\n  }\r\n});\r\n\r\nconst Navigation = () => {\r\n  const classes = styles();\r\n  const [page, setPage] = useState('remix')\r\n\r\n  const handleCurrentPage = (currentPage: string) => {\r\n    console.log(\"setting page to \" + page);\r\n    setPage(currentPage)\r\n  }\r\n\r\n  return(\r\n    <Box\r\n      id='navigation'\r\n    >     \r\n      <Link \r\n          to={'/remix'}\r\n          style={{ textDecoration: 'none', color: 'black' }}\r\n      >\r\n        <Box\r\n          onClick={()=> {handleCurrentPage('remix')}}\r\n          id='remix-icon-container'\r\n        >\r\n          <MusicNoteIcon id='remix-icon' className={(page === 'remix') ? classes.selectedNavigation : classes.nonSelectedNavigation} fontSize=\"medium\"/>\r\n          <Typography id='navigation-remix'>Remix</Typography>\r\n        </Box>\r\n      </Link>\r\n\r\n      <Link \r\n          to={'/library'}\r\n          style={{ textDecoration: 'none',  color: 'black' }}\r\n      >\r\n        <Box\r\n          onClick={()=> {handleCurrentPage('library')}}\r\n          id='library-icon-container'\r\n        >\r\n          <LibraryMusicIcon id='library-icon' className={(page === 'library') ? classes.selectedNavigation : classes.nonSelectedNavigation} fontSize=\"medium\"/>\r\n          <Typography id='navigation-library'>Library</Typography>\r\n        </Box>\r\n      </Link>\r\n    </Box>\r\n    )\r\n}\r\n\r\nexport default Navigation;\r\n","export default __webpack_public_path__ + \"static/media/ctrl.3a0d5a17.jpg\";","export default __webpack_public_path__ + \"static/media/vocals.8361b78e.wav\";","export default __webpack_public_path__ + \"static/media/bass.39173d87.wav\";","export default __webpack_public_path__ + \"static/media/other.da10bb59.wav\";","export default __webpack_public_path__ + \"static/media/drums.3a6fae4c.wav\";","import  React, { useRef, useState, ChangeEvent, useEffect } from 'react';\r\nimport { \r\n  Box,\r\n  Typography,\r\n  Button\r\n} from '@material-ui/core';\r\n\r\nimport Slider from \"@mui/material/Slider\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faDrum, faMicrophoneLines, faGuitar, faMusic } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport '../../styling/stemRemix.css';\r\n\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport PauseIcon from '@mui/icons-material/Pause';\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\n\r\nimport Ctrl from '../../ctrl.jpg';\r\n\r\nimport vocals from './../vocals.wav';\r\nimport bass from './../bass.wav';\r\nimport other from './../other.wav';\r\nimport drums from './../drums.wav';\r\nimport { ConstructionOutlined, VolumeDown } from '@mui/icons-material';\r\n\r\nconst StemRemix = () => {  \r\n    const [favorite, setFavorite] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n\r\n    const audioContext = new AudioContext();\r\n\r\n    const otherAudio = new Audio(other);\r\n    const otherGainNode = new GainNode(audioContext, { gain: 0.5});\r\n    const otherVolume = document.getElementById(\"volume\")!;\r\n\r\n    const vocalAudio = new Audio(vocals);\r\n    const vocalGainNode = new GainNode(audioContext, { gain: 0.5});\r\n    const vocalVolume = document.getElementById(\"vocal-volume\")!;\r\n\r\n    const bassAudio = new Audio(bass);\r\n    const bassGainNode = new GainNode(audioContext, { gain: 0.5});\r\n    const bassVolume = document.getElementById(\"bass-volume\")!;\r\n\r\n    const drumsAudio = new Audio(drums);\r\n    const drumsGainNode = new GainNode(audioContext, { gain: 0.5});\r\n    const drumsVolume = document.getElementById(\"drums-volume\")!;\r\n\r\n\r\n    setupEventListeners()\r\n    setupContext()\r\n\r\n    async function setupContext() {\r\n      const track = audioContext.createMediaElementSource(otherAudio);\r\n      track.connect(otherGainNode).connect(audioContext.destination)\r\n\r\n      const vocalTrack = audioContext.createMediaElementSource(vocalAudio);\r\n      vocalTrack.connect(vocalGainNode).connect(audioContext.destination);\r\n\r\n      const bassTrack = audioContext.createMediaElementSource(bassAudio);\r\n      bassTrack.connect(bassGainNode).connect(audioContext.destination);\r\n\r\n      const drumsTrack = audioContext.createMediaElementSource(drumsAudio);\r\n      drumsTrack.connect(drumsGainNode).connect(audioContext.destination);\r\n    }\r\n\r\n    const handleSetPlaying = () => {\r\n      setPlaying(!playing)\r\n      vocalAudio.play();\r\n      bassAudio.play();\r\n      drumsAudio.play();\r\n      otherAudio.play();\r\n    }\r\n\r\n    const handleSetFavorite = () => {\r\n      setFavorite(!favorite)\r\n    };\r\n\r\n    async function setupEventListeners(){\r\n      otherVolume?.addEventListener('input', event => {\r\n        const element = event.target as HTMLInputElement\r\n        console.log(parseFloat(element.value))\r\n        otherGainNode.gain.value = parseFloat(element.value)\r\n      })\r\n\r\n      vocalVolume?.addEventListener('input', event => {\r\n        const element = event.target as HTMLInputElement\r\n        console.log(parseFloat(element.value))\r\n        vocalGainNode.gain.value = parseFloat(element.value)\r\n      })\r\n\r\n      bassVolume?.addEventListener('input', event => {\r\n        const element = event.target as HTMLInputElement\r\n        console.log(parseFloat(element.value))\r\n        bassGainNode.gain.value = parseFloat(element.value)\r\n      })\r\n\r\n      drumsVolume?.addEventListener('input', event => {\r\n        const element = event.target as HTMLInputElement\r\n        console.log(parseFloat(element.value))\r\n        drumsGainNode.gain.value = parseFloat(element.value)\r\n      })\r\n    }\r\n\r\n  return(\r\n    <Box\r\n      id='remix-window'\r\n    >\r\n      <Typography id='stem-remix'>Stem Remix</Typography>\r\n      <Box\r\n        id='remix-and-sliders'\r\n      >\r\n        <Box\r\n      id='remix-playing'\r\n    >\r\n      <img\r\n        id='remix-playing-cover'\r\n        src={Ctrl}\r\n        alt='Cover art of current remix'\r\n      />\r\n      <Box\r\n        id='remix-information'\r\n      >\r\n        <Box\r\n          display='flex'\r\n          flexDirection='row'\r\n          justifyContent='space-between'\r\n        >\r\n          <Box>\r\n            <Typography id='remix-playing-title'>test drive</Typography>\r\n            <Typography id='remix-playing-artist'>Ariana Grande</Typography>\r\n          </Box>\r\n          {playing ? <PauseIcon id='pause-icon' onClick = {() => handleSetPlaying()} /> : <PlayArrowIcon id='play-arrow-icon' onClick = {() => handleSetPlaying()} />}\r\n        </Box>\r\n        <Slider id='remix-playing-time' aria-label=\"Play time\" defaultValue={0} valueLabelDisplay=\"auto\" style={{ color: '#1DB954' }}/>\r\n        <Typography id='remix-playing-time'>2min 02 secs</Typography>\r\n      <Box\r\n        id='remix-creator'\r\n      >\r\n        {favorite ? <FavoriteIcon id='favorite-icon' onClick = {() => handleSetFavorite()} /> : <FavoriteBorderIcon id='favorite-border-icon' onClick = {() => handleSetFavorite()} />}\r\n        <img\r\n          style={{ borderRadius: '20px', height: '20px', width: '20px'}}\r\n          src={Ctrl}\r\n          alt='User profile of remix creator'\r\n          id='remix-creator-icon'\r\n        />\r\n        <Typography id='remix-playing-creator'>ernest</Typography>\r\n      </Box>\r\n      </Box>\r\n    </Box>\r\n\r\n\r\n\r\n        <Box\r\n          id='sliders'\r\n        >\r\n          <Box\r\n            className='slider'\r\n          >\r\n            <Box\r\n              display='flex'\r\n              flexDirection='column'\r\n              p={2}\r\n            >\r\n              <FontAwesomeIcon icon={faMicrophoneLines} className='icon'/>\r\n              <Typography id='slider-text'>Vocals</Typography>\r\n            </Box>\r\n            <input type=\"range\" id=\"vocal-volume\" min=\"0\" max=\"1\" step=\"0.01\"/>\r\n          </Box>\r\n\r\n          <Box\r\n            className='slider'\r\n          >\r\n            <Box\r\n              display='flex'\r\n              flexDirection='column'\r\n              p={2}\r\n            >\r\n              <FontAwesomeIcon icon={faDrum} className='icon'/>\r\n              <Typography id='slider-text'>Drums</Typography>\r\n            </Box>\r\n            <input type=\"range\" id=\"drums-volume\" min=\"0\" max=\"1\" step=\"0.01\"/>\r\n          </Box>  \r\n          \r\n          <Box\r\n            className='slider'\r\n          >\r\n            <Box\r\n              display='flex'\r\n              flexDirection='column'\r\n              p={2}\r\n            >\r\n              <FontAwesomeIcon icon={faGuitar} className='icon'/>\r\n              <Typography id='slider-text'>Bass</Typography>\r\n            </Box>\r\n            <input type=\"range\" id=\"bass-volume\" min=\"0\" max=\"1\" step=\"0.01\"/>\r\n          </Box>\r\n          \r\n          <Box\r\n            className='slider'\r\n          >\r\n            <Box\r\n              display='flex'\r\n              flexDirection='column'\r\n              p={2}\r\n            >\r\n              <FontAwesomeIcon icon={faMusic} className='icon'/>\r\n              <Typography id='slider-text'>Other</Typography>\r\n            </Box>\r\n            <input type=\"range\" id=\"volume\" min=\"0\" max=\"1\" step=\"0.01\"/>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n    )\r\n}\r\n\r\nexport default StemRemix;\r\n","import React, { FunctionComponent, ReactElement } from 'react';\r\nimport { \r\n  Box,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport '../../styling/remixComponent.css';\r\n\r\ntype RemixComponentProps = {\r\n  number: number,\r\n  cover: string,\r\n  title: string,\r\n  artist: string\r\n}\r\n\r\n\r\nconst RemixComponent: FunctionComponent<RemixComponentProps> = (props): ReactElement => {  \r\n  return(\r\n    <Box\r\n      id='remix-component'\r\n    >\r\n      <Box\r\n        id='song-information'\r\n      >\r\n        <Box\r\n          id='remix-number-cover'\r\n        >\r\n          <Typography id='number'>{props.number}</Typography>\r\n          <img\r\n            id='song-cover-art'\r\n            src={props.cover}\r\n            alt='Covert art of track'\r\n          />\r\n        </Box>\r\n        <Box\r\n          id='remix-title-artist'\r\n        >\r\n          <Typography id='title'>{props.title} </Typography>\r\n          <Typography id='artist'>{props.artist}</Typography>\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        id=\"dots\"\r\n      >\r\n        <span className=\"dot\"></span>\r\n        <span className=\"dot\"></span>\r\n        <span className=\"dot\"></span>\r\n      </Box>\r\n    </Box>\r\n    )\r\n}\r\n\r\n\r\nexport default RemixComponent;\r\n","import { \r\n  Box,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport '../../styling/library.css';\r\n\r\nimport RemixComponent from './remixComponent';\r\n\r\nimport Ctrl from '../../ctrl.jpg';\r\n\r\nconst Library = () => {  \r\n  return(\r\n    <Box\r\n      id='library-window'\r\n    >\r\n      <Typography id='remixes-navigation'> Remixes </Typography>\r\n      <Typography id='remixes'>Remixes</Typography>\r\n      <Box\r\n        id='remix-container'\r\n      >\r\n        <RemixComponent \r\n          number={1} cover={Ctrl} title=\"The Weekend\" artist=\"Sza\"\r\n        />\r\n        <RemixComponent \r\n          number={2} cover={Ctrl} title=\"Life's Too Short\" artist=\"Tinashe\"\r\n        />\r\n        <RemixComponent \r\n          number={3} cover={Ctrl} title=\"STUD\" artist=\"Troye Sivan\"\r\n        />\r\n        <RemixComponent \r\n          number={4} cover={Ctrl} title=\"STUD\" artist=\"Troye Sivan\"\r\n        />\r\n        <RemixComponent \r\n          number={5} cover={Ctrl} title=\"STUD\" artist=\"Troye Sivan\"\r\n        />\r\n        <RemixComponent \r\n          number={6} cover={Ctrl} title=\"STUD\" artist=\"Troye Sivan\"\r\n        />\r\n        <RemixComponent \r\n          number={7} cover={Ctrl} title=\"STUD\" artist=\"Troye Sivan\"\r\n        />\r\n        <RemixComponent \r\n          number={8} cover={Ctrl} title=\"STUD\" artist=\"Troye Sivan\"\r\n        />\r\n      </Box>\r\n    </Box>\r\n    )\r\n}\r\n\r\nexport default Library;\r\n","export default __webpack_public_path__ + \"static/media/test_drive.e818d0eb.mp3\";","import  { useState } from 'react';\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport PauseIcon from '@mui/icons-material/Pause';\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\n\r\nimport '../styling/currentlyPlayingMobile.css';\r\n\r\n\r\nimport Ctrl from '../ctrl.jpg';\r\n\r\nimport drive from './test_drive.mp3';\r\n\r\n\r\nconst CurrentlyPlayingMobile = () => {\r\n  const [playing, setPlaying] = useState(false);\r\n\r\n  const [volume, setVolume] = useState(50);\r\n\r\n\r\n  const handleSetPlaying = () => {\r\n    console.log('mobile set playing');\r\n    setPlaying(!playing)\r\n    var music = new Audio(drive);\r\n    music.play();\r\n  };\r\n\r\n  return(\r\n    <Box\r\n      id='currently-playing'\r\n    >\r\n      <Box\r\n        display='flex'\r\n        flexDirection='row'\r\n      >\r\n        <img\r\n            id='currently-playing-cover-art'\r\n            src={Ctrl}\r\n            alt=\"Cover art of currently playing track\"\r\n          />\r\n        <Box\r\n          display='flex'\r\n          flexDirection='column'\r\n          alignSelf='center'\r\n          pl={1}\r\n          textAlign='left'\r\n        >\r\n          <Typography id='title'>better off</Typography>\r\n          <Typography id='artist'>Ariana Grande</Typography>\r\n        </Box>\r\n      </Box>\r\n      {playing ? <PlayArrowIcon onClick = {() => handleSetPlaying()} style={{ 'alignSelf': 'center', color: '#1DB954'}}/> : <PauseIcon onClick = {() => handleSetPlaying()} style={{ 'alignSelf': 'center', color: '#1DB954'}}/>}\r\n    </Box>\r\n    )\r\n}\r\n\r\nexport default CurrentlyPlayingMobile;\r\n","import { \r\n  Box\r\n} from '@material-ui/core';\r\n\r\nimport '../styling/window.css';\r\n\r\nimport Navigation from './navigation';\r\nimport Remix from './remix/stemRemix';\r\nimport Library from './library/library';\r\nimport CurrentlyPlayingMobile from './currentlyPlayingMobile';\r\nimport CurrentlyPlayingDesktop from './currentlyPlayingDesktop';\r\n\r\nimport {\r\n  Routes,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nconst Window = () => {\r\n\r\n  return(\r\n    <Box\r\n      id='window-container'\r\n    >\r\n      <Box\r\n        id=\"window\"\r\n      >\r\n        <Routes>\r\n          <Route path=\"/\" element={<Remix />} />\r\n        </Routes>\r\n        <Routes>\r\n          <Route path=\"/remix\" element={<Remix />} />\r\n        </Routes>\r\n        <Routes>\r\n          <Route path=\"/library\" element={<Library />} />\r\n        </Routes>\r\n      </Box>\r\n      <Box\r\n        id='playing-and-navigation-container'\r\n      >\r\n        <CurrentlyPlayingMobile/>\r\n        <Navigation/>\r\n      </Box>\r\n    </Box>\r\n    )\r\n}\r\n\r\nexport default Window;\r\n","import React, {useEffect} from 'react';\r\n\r\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nimport './App.css'; \r\nimport Window from './user_interface/window';\r\n\r\nconst theme = createTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      \"Arial\"\r\n    ].join(\",\")\r\n  }\r\n});\r\n\r\nconst App = () => {\r\n\r\n  // const createRemix = () => {\r\n  //   var xhr = new XMLHttpRequest()\r\n\r\n  //     xhr.addEventListener('load', () => {})\r\n\r\n  //     xhr.open('POST', 'http://localhost:5000/remix', false)\r\n  //     xhr.send()\r\n      \r\n  //     const responseBody = JSON.parse(xhr.response)\r\n\r\n  //     if (responseBody['response'] === 200){\r\n  //         const remixName = responseBody\r\n  //         console.log(remixName)\r\n  //         localStorage.setItem('remixName', remixName);\r\n  //     } else {\r\n  //         const errorMessage = responseBody['error']\r\n  //     }\r\n  // }\r\n\r\n  useEffect(() => {\r\n    // createRemix();\r\n}, []);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className=\"App\">\r\n        <Window/>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
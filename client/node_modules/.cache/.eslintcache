[{"C:\\Users\\Ernest Lian\\Desktop\\Side Projects\\synthesize\\client\\src\\index.tsx":"1","C:\\Users\\Ernest Lian\\Desktop\\Side Projects\\synthesize\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Ernest Lian\\Desktop\\Side Projects\\synthesize\\client\\src\\App.tsx":"3","C:\\Users\\Ernest Lian\\Desktop\\Side Projects\\synthesize\\client\\src\\user_interface\\window.tsx":"4","C:\\Users\\Ernest Lian\\Desktop\\Side Projects\\synthesize\\client\\src\\user_interface\\navigation.tsx":"5","C:\\Users\\Ernest Lian\\Desktop\\Side Projects\\synthesize\\client\\src\\user_interface\\library\\library.tsx":"6","C:\\Users\\Ernest Lian\\Desktop\\Side Projects\\synthesize\\client\\src\\user_interface\\library\\remixComponent.tsx":"7","C:\\Users\\Ernest Lian\\Desktop\\Side Projects\\synthesize\\client\\src\\user_interface\\remix\\stemRemix.tsx":"8","C:\\Users\\Ernest Lian\\Desktop\\Side Projects\\synthesize\\client\\src\\user_interface\\remix\\remixPlaying.tsx":"9","C:\\Users\\Ernest Lian\\Desktop\\Side Projects\\synthesize\\client\\src\\user_interface\\currentlyPlayingMobile.tsx":"10","C:\\Users\\Ernest Lian\\Desktop\\Side Projects\\synthesize\\client\\src\\user_interface\\currentlyPlayingDesktop.tsx":"11"},{"size":615,"mtime":1653348951146,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1627836706458,"results":"14","hashOfConfig":"13"},{"size":1105,"mtime":1657039290419,"results":"15","hashOfConfig":"13"},{"size":1037,"mtime":1657076279263,"results":"16","hashOfConfig":"13"},{"size":2007,"mtime":1656703912678,"results":"17","hashOfConfig":"13"},{"size":1369,"mtime":1657393809263,"results":"18","hashOfConfig":"13"},{"size":1202,"mtime":1656262692392,"results":"19","hashOfConfig":"13"},{"size":4739,"mtime":1657419353185,"results":"20","hashOfConfig":"13"},{"size":1762,"mtime":1657409830817,"results":"21","hashOfConfig":"13"},{"size":1528,"mtime":1657411497681,"results":"22","hashOfConfig":"13"},{"size":3564,"mtime":1657419291467,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1o33ntb",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ernest Lian\\Desktop\\Side Projects\\synthesize\\client\\src\\index.tsx",[],["50","51"],"C:\\Users\\Ernest Lian\\Desktop\\Side Projects\\synthesize\\client\\src\\reportWebVitals.js",[],["52","53"],"C:\\Users\\Ernest Lian\\Desktop\\Side Projects\\synthesize\\client\\src\\App.tsx",[],"C:\\Users\\Ernest Lian\\Desktop\\Side Projects\\synthesize\\client\\src\\user_interface\\window.tsx",[],"C:\\Users\\Ernest Lian\\Desktop\\Side Projects\\synthesize\\client\\src\\user_interface\\navigation.tsx",[],"C:\\Users\\Ernest Lian\\Desktop\\Side Projects\\synthesize\\client\\src\\user_interface\\library\\library.tsx",[],"C:\\Users\\Ernest Lian\\Desktop\\Side Projects\\synthesize\\client\\src\\user_interface\\library\\remixComponent.tsx",[],"C:\\Users\\Ernest Lian\\Desktop\\Side Projects\\synthesize\\client\\src\\user_interface\\remix\\stemRemix.tsx",["54","55","56","57","58"],"import  { useRef, useState, ChangeEvent } from 'react';\r\nimport { \r\n  Box,\r\n  Typography,\r\n  Button\r\n} from '@material-ui/core';\r\n\r\nimport Slider from \"@mui/material/Slider\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faDrum, faMicrophoneLines, faGuitar, faMusic } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport '../../styling/stemRemix.css';\r\n\r\nimport RemixPlaying from './remixPlaying';\r\n\r\nimport Ctrl from '../../ctrl.jpg';\r\n\r\nimport vocals from './../vocals.wav';\r\nimport bass from './../bass.wav';\r\nimport other from './../other.wav';\r\nimport drums from './../drums.wav';\r\n\r\nconst StemRemix = () => {  \r\n  const vocalsRef = useRef(new Audio(vocals));\r\n  const bassRef = useRef(new Audio(bass));\r\n  const otherRef = useRef(new Audio(other));\r\n  const drumsRef = useRef(new Audio(drums));\r\n\r\n\r\n  const [playing, setPlaying] = useState(false);\r\n\r\n  const [vocalsVolume, setVocalsVolume] = useState(0);\r\n  const [bassVolume, setBassVolume] = useState(0);\r\n  const [drumsVolume, setDrumsVolume] = useState(0);\r\n  const [otherVolume, setOtherVolume] = useState(0);\r\n\r\n\r\n  const handleSetPlaying = () => {\r\n    setPlaying(!playing)\r\n\r\n    vocalsRef.current.play();\r\n    bassRef.current.play();\r\n    drumsRef.current.play();\r\n    otherRef.current.play();\r\n\r\n  };\r\n\r\n  const handleVocalsVolumeChange = (event: Event, newValue: number | number[]) => {\r\n    setVocalsVolume(newValue as number);\r\n    var okay: number = Math.round(newValue as number/100)\r\n    vocalsRef.current.volume = okay\r\n  };\r\n\r\n  const handleBassVolumeChange = (event: Event, newValue: number | number[]) => {\r\n    setBassVolume(newValue as number);\r\n    var okay: number = Math.round(newValue as number/100)\r\n    bassRef.current.volume = okay\r\n  };\r\n\r\n  const handleDrumsVolumeChange = (event: Event, newValue: number | number[]) => {\r\n    setDrumsVolume(newValue as number);\r\n    var okay: number = Math.round(newValue as number/100)\r\n    drumsRef.current.volume = okay\r\n  };\r\n\r\n  const handleOtherVolumeChange = (event: Event, newValue: number | number[]) => {\r\n    setOtherVolume(newValue as number);\r\n    var okay: number = Math.round(newValue as number/100)\r\n    otherRef.current.volume = okay\r\n  };\r\n\r\n  return(\r\n    <Box\r\n      id='remix-window'\r\n    >\r\n      <Button onClick={()=> handleSetPlaying()}>hello</Button>\r\n      <Typography id='stem-remix'>Stem Remix</Typography>\r\n      <Box\r\n        id='remix-and-sliders'\r\n      >\r\n        <RemixPlaying cover={Ctrl}/>\r\n        <Box\r\n          id='sliders'\r\n        >\r\n          <Box\r\n            className='slider'\r\n          >\r\n            <Box\r\n              display='flex'\r\n              flexDirection='column'\r\n              p={2}\r\n            >\r\n              <FontAwesomeIcon icon={faMicrophoneLines} className='icon'/>\r\n              <Typography id='slider-text'>Vocals</Typography>\r\n            </Box>\r\n            <Slider defaultValue={100} aria-label=\"Default\" valueLabelDisplay=\"auto\" style={{ marginRight: '30px', color: '#1DB954' }} onChange={handleVocalsVolumeChange}/>\r\n          </Box>\r\n\r\n          <Box\r\n            className='slider'\r\n          >\r\n            <Box\r\n              display='flex'\r\n              flexDirection='column'\r\n              p={2}\r\n            >\r\n              <FontAwesomeIcon icon={faDrum} className='icon'/>\r\n              <Typography id='slider-text'>Drums</Typography>\r\n            </Box>\r\n            <Slider defaultValue={100} aria-label=\"Default\" valueLabelDisplay=\"auto\" style={{ marginRight: '30px', color: '#1DB954' }} onChange={handleDrumsVolumeChange}/>\r\n          </Box>  \r\n          \r\n          <Box\r\n            className='slider'\r\n          >\r\n            <Box\r\n              display='flex'\r\n              flexDirection='column'\r\n              p={2}\r\n            >\r\n              <FontAwesomeIcon icon={faGuitar} className='icon'/>\r\n              <Typography id='slider-text'>Bass</Typography>\r\n            </Box>\r\n            <Slider defaultValue={100} aria-label=\"Default\" valueLabelDisplay=\"auto\" style={{ marginRight: '30px', color: '#1DB954' }} onChange={handleBassVolumeChange}/>\r\n          </Box>\r\n          \r\n          <Box\r\n            className='slider'\r\n          >\r\n            <Box\r\n              display='flex'\r\n              flexDirection='column'\r\n              p={2}\r\n            >\r\n              <FontAwesomeIcon icon={faMusic} className='icon'/>\r\n              <Typography id='slider-text'>Other</Typography>\r\n            </Box>\r\n            <Slider defaultValue={0} aria-label=\"Default\" valueLabelDisplay=\"auto\" style={{ marginRight: '30px', color: '#1DB954' }} onChange={handleOtherVolumeChange}/>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n    )\r\n}\r\n\r\nexport default StemRemix;\r\n","C:\\Users\\Ernest Lian\\Desktop\\Side Projects\\synthesize\\client\\src\\user_interface\\remix\\remixPlaying.tsx",[],"C:\\Users\\Ernest Lian\\Desktop\\Side Projects\\synthesize\\client\\src\\user_interface\\currentlyPlayingMobile.tsx",["59","60"],"import  { useState } from 'react';\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport PauseIcon from '@mui/icons-material/Pause';\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\n\r\nimport '../styling/currentlyPlayingMobile.css';\r\n\r\n\r\nimport Ctrl from '../ctrl.jpg';\r\n\r\nimport drive from './test_drive.mp3';\r\n\r\n\r\nconst CurrentlyPlayingMobile = () => {\r\n  const [playing, setPlaying] = useState(false);\r\n\r\n  const [volume, setVolume] = useState(50);\r\n\r\n\r\n  const handleSetPlaying = () => {\r\n    console.log('mobile set playing');\r\n    setPlaying(!playing)\r\n    var music = new Audio(drive);\r\n    music.play();\r\n  };\r\n\r\n  return(\r\n    <Box\r\n      id='currently-playing'\r\n    >\r\n      <Box\r\n        display='flex'\r\n        flexDirection='row'\r\n      >\r\n        <img\r\n            id='currently-playing-cover-art'\r\n            src={Ctrl}\r\n            alt=\"Cover art of currently playing track\"\r\n          />\r\n        <Box\r\n          display='flex'\r\n          flexDirection='column'\r\n          alignSelf='center'\r\n          pl={1}\r\n          textAlign='left'\r\n        >\r\n          <Typography id='title'>better off</Typography>\r\n          <Typography id='artist'>Ariana Grande</Typography>\r\n        </Box>\r\n      </Box>\r\n      {playing ? <PlayArrowIcon onClick = {() => handleSetPlaying()} style={{ 'alignSelf': 'center', color: '#1DB954'}}/> : <PauseIcon onClick = {() => handleSetPlaying()} style={{ 'alignSelf': 'center', color: '#1DB954'}}/>}\r\n    </Box>\r\n    )\r\n}\r\n\r\nexport default CurrentlyPlayingMobile;\r\n","C:\\Users\\Ernest Lian\\Desktop\\Side Projects\\synthesize\\client\\src\\user_interface\\currentlyPlayingDesktop.tsx",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":1,"column":29,"nodeType":"67","messageId":"68","endLine":1,"endColumn":40},{"ruleId":"65","severity":1,"message":"69","line":33,"column":10,"nodeType":"67","messageId":"68","endLine":33,"endColumn":22},{"ruleId":"65","severity":1,"message":"70","line":34,"column":10,"nodeType":"67","messageId":"68","endLine":34,"endColumn":20},{"ruleId":"65","severity":1,"message":"71","line":35,"column":10,"nodeType":"67","messageId":"68","endLine":35,"endColumn":21},{"ruleId":"65","severity":1,"message":"72","line":36,"column":10,"nodeType":"67","messageId":"68","endLine":36,"endColumn":21},{"ruleId":"65","severity":1,"message":"73","line":17,"column":10,"nodeType":"67","messageId":"68","endLine":17,"endColumn":16},{"ruleId":"65","severity":1,"message":"74","line":17,"column":18,"nodeType":"67","messageId":"68","endLine":17,"endColumn":27},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"@typescript-eslint/no-unused-vars","'ChangeEvent' is defined but never used.","Identifier","unusedVar","'vocalsVolume' is assigned a value but never used.","'bassVolume' is assigned a value but never used.","'drumsVolume' is assigned a value but never used.","'otherVolume' is assigned a value but never used.","'volume' is assigned a value but never used.","'setVolume' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
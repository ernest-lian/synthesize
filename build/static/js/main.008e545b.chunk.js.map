{"version":3,"sources":["user_interface/navigation.tsx","user_interface/test_drive.png","user_interface/vocals.wav","user_interface/bass.wav","user_interface/other.wav","user_interface/drums.wav","user_interface/remix/stemRemix.tsx","user_interface/library/remixComponent.tsx","user_interface/library/library.tsx","user_interface/window.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["styles","makeStyles","selectedNavigation","nonSelectedNavigation","Navigation","classes","useState","page","setPage","handleCurrentPage","currentPage","console","log","Box","id","to","style","textDecoration","color","onClick","className","fontSize","StemRemix","playing","setPlaying","handleSetPlaying","audioContext","AudioContext","otherAudio","Audio","other","vocalAudio","vocals","bassAudio","bass","drumsAudio","drums","otherGainNode","GainNode","gain","otherVolume","document","getElementById","vocalGainNode","vocalVolume","bassGainNode","bassVolume","drumsGainNode","drumsVolume","a","createMediaElementSource","connect","destination","addEventListener","event","element","target","value","parseFloat","useEffect","play","pause","removeEventListener","setupEventListeners","setupContext","Typography","src","TestDrive","alt","display","flexDirection","Slider","defaultValue","valueLabelDisplay","p","icon","faMicrophoneLines","type","min","max","step","faDrum","faGuitar","faMusic","RemixComponent","props","number","cover","title","artist","Library","Ctrl","Window","path","theme","createTheme","typography","fontFamily","join","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.008e545b.chunk.js","sourcesContent":["/* React */\r\nimport { useState } from 'react';\r\n\r\n/* Material-UI */\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n/* Navigation icons */\r\nimport MusicNoteIcon from '@mui/icons-material/MusicNote';\r\nimport LibraryMusicIcon from '@mui/icons-material/LibraryMusic';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\n/* Router */\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/* Styling */\r\nimport '../styling/navigation.css';\r\n\r\nconst styles = makeStyles({\r\n  selectedNavigation: {\r\n      \"background-color\": \"red\",\r\n      \"border-radius\": \"20px\",\r\n      \"padding\": \"5px\"\r\n  },\r\n  nonSelectedNavigation: {\r\n    \"border-radius\": \"20px\",\r\n    \"padding\": \"5px\"\r\n  }\r\n});\r\n\r\nconst Navigation = () => {\r\n  const classes = styles();\r\n  const [page, setPage] = useState('remix')\r\n\r\n  const handleCurrentPage = (currentPage: string) => {\r\n    console.log(\"setting page to \" + page);\r\n    setPage(currentPage)\r\n  }\r\n\r\n  return(\r\n    <Box\r\n      id='navigation'\r\n    > \r\n    <Link \r\n          to={'/'}\r\n          style={{ textDecoration: 'none', color: 'black' }}\r\n      >\r\n        <Box\r\n          onClick={()=> {handleCurrentPage('home')}}\r\n          id='home-icon-container'\r\n        >\r\n          <HomeIcon id='home-icon' className={(page === 'home') ? classes.selectedNavigation : classes.nonSelectedNavigation} fontSize=\"medium\"/>\r\n        </Box>\r\n      </Link>    \r\n      <Link \r\n          to={'/library'}\r\n          style={{ textDecoration: 'none', color: 'black' }}\r\n      >\r\n        <Box\r\n          onClick={()=> {handleCurrentPage('library')}}\r\n          id='library-icon-container'\r\n        >\r\n          <MusicNoteIcon id='library-icon' className={(page === 'remix') ? classes.selectedNavigation : classes.nonSelectedNavigation} fontSize=\"medium\"/>\r\n        </Box>\r\n      </Link>\r\n\r\n      <Link \r\n          to={'/add'}\r\n          style={{ textDecoration: 'none', color: 'black' }}\r\n      >\r\n        <Box\r\n          onClick={()=> {handleCurrentPage('add')}}\r\n          id='add-icon-container'\r\n        >\r\n          <AddIcon id='add-icon' className={(page === 'add') ? classes.selectedNavigation : classes.nonSelectedNavigation} fontSize=\"medium\"/>\r\n        </Box>\r\n      </Link>\r\n\r\n      <Link \r\n          to={'/library'}\r\n          style={{ textDecoration: 'none',  color: 'black' }}\r\n      >\r\n        <Box\r\n          onClick={()=> {handleCurrentPage('library')}}\r\n          id='library-icon-container'\r\n        >\r\n          <LibraryMusicIcon id='library-icon' className={(page === 'library') ? classes.selectedNavigation : classes.nonSelectedNavigation} fontSize=\"medium\"/>\r\n        </Box>\r\n      </Link>\r\n      <Link \r\n          to={'/profile'}\r\n          style={{ textDecoration: 'none', color: 'black' }}\r\n      >\r\n        <Box\r\n          onClick={()=> {handleCurrentPage('profile')}}\r\n          id='profile-icon-container'\r\n        >\r\n          <PersonIcon id='profile-icon' className={(page === 'profile') ? classes.selectedNavigation : classes.nonSelectedNavigation} fontSize=\"medium\"/>\r\n        </Box>\r\n      </Link>   \r\n    </Box>\r\n    )\r\n}\r\n\r\nexport default Navigation;\r\n","export default __webpack_public_path__ + \"static/media/test_drive.fd2c38cf.png\";","export default __webpack_public_path__ + \"static/media/vocals.8361b78e.wav\";","export default __webpack_public_path__ + \"static/media/bass.39173d87.wav\";","export default __webpack_public_path__ + \"static/media/other.da10bb59.wav\";","export default __webpack_public_path__ + \"static/media/drums.3a6fae4c.wav\";","// @ts-nocheck\r\n\r\nimport  React, { useMemo, useState, ChangeEvent, useEffect } from 'react';\r\nimport { \r\n  Box,\r\n  Typography,\r\n  Button\r\n} from '@material-ui/core';\r\n\r\nimport Slider from \"@mui/material/Slider\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faDrum, faMicrophoneLines, faGuitar, faMusic } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport '../../styling/stemRemix.css';\r\nimport '../../styling/currentlyPlayingMobile.css';\r\n\r\nimport PauseIcon from '@mui/icons-material/Pause';\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\n\r\nimport TestDrive from '../test_drive.png';\r\n\r\nimport vocals from './../vocals.wav';\r\nimport bass from './../bass.wav';\r\nimport other from './../other.wav';\r\nimport drums from './../drums.wav';\r\n\r\n\r\n\r\nconst StemRemix = () => {\r\n  console.log('in stem remix')  \r\n  const [playing, setPlaying] = useState(false);\r\n  \r\n  const handleSetPlaying = () => {\r\n    setPlaying(playing => !playing)\r\n  }\r\n\r\n  const audioContext = new AudioContext();\r\n  const otherAudio = new Audio(other);\r\n  const vocalAudio = new Audio(vocals);\r\n  const bassAudio = new Audio(bass);\r\n  const drumsAudio = new Audio(drums);\r\n\r\n  const otherGainNode = new GainNode(audioContext, { gain: 0.5});\r\nconst otherVolume = document.getElementById(\"other-volume\")!;\r\n\r\nconst vocalGainNode = new GainNode(audioContext, { gain: 0.5});\r\nconst vocalVolume = document.getElementById(\"vocal-volume\")!;\r\n\r\nconst bassGainNode = new GainNode(audioContext, { gain: 0.5});\r\nconst bassVolume = document.getElementById(\"bass-volume\")!;\r\n\r\nconst drumsGainNode = new GainNode(audioContext, { gain: 0.5});\r\nconst drumsVolume = document.getElementById(\"drums-volume\")!;\r\n\r\n  async function setupContext() {\r\n    const track = audioContext.createMediaElementSource(otherAudio);\r\n    track.connect(otherGainNode).connect(audioContext.destination)\r\n  \r\n    const vocalTrack = audioContext.createMediaElementSource(vocalAudio);\r\n    vocalTrack.connect(vocalGainNode).connect(audioContext.destination);\r\n  \r\n    const bassTrack = audioContext.createMediaElementSource(bassAudio);\r\n    bassTrack.connect(bassGainNode).connect(audioContext.destination);\r\n  \r\n    const drumsTrack = audioContext.createMediaElementSource(drumsAudio);\r\n    drumsTrack.connect(drumsGainNode).connect(audioContext.destination);\r\n  }\r\n  \r\n  async function setupEventListeners(){\r\n    otherVolume?.addEventListener('input', event => {\r\n      const element = event.target as HTMLInputElement\r\n      otherGainNode.gain.value = parseFloat(element.value)\r\n    })\r\n  \r\n    vocalVolume?.addEventListener('input', event => {\r\n      const element = event.target as HTMLInputElement\r\n      vocalGainNode.gain.value = parseFloat(element.value)\r\n    })\r\n  \r\n    bassVolume?.addEventListener('input', event => {\r\n      const element = event.target as HTMLInputElement\r\n      bassGainNode.gain.value = parseFloat(element.value)\r\n    })\r\n  \r\n    drumsVolume?.addEventListener('input', event => {\r\n      const element = event.target as HTMLInputElement\r\n      drumsGainNode.gain.value = parseFloat(element.value)\r\n    })\r\n  }\r\n\r\n\r\n    useEffect(() => {\r\n      console.log(playing)\r\n\r\n      playing ? vocalAudio.play() : vocalAudio.pause();\r\n      playing ? bassAudio.play() : bassAudio.pause();\r\n      playing ? drumsAudio.play() : drumsAudio.pause();\r\n      playing ? otherAudio.play() : otherAudio.pause();\r\n\r\n      vocalAudio.addEventListener('ended', () => setPlaying(false));\r\n\r\n      return () => {\r\n        vocalAudio.removeEventListener('ended', () => setPlaying(false));\r\n      };\r\n    }, [playing]);\r\n\r\n    setupEventListeners()\r\n    setupContext()\r\n\r\n  return(\r\n    <Box\r\n      id='remix-window'\r\n    >\r\n      <Typography id='stem-remix'>Remix</Typography>\r\n      <Box\r\n        id='remix-and-sliders'\r\n      >\r\n        <Box\r\n          id='remix-playing'\r\n        >\r\n          <img\r\n            id='remix-playing-cover'\r\n            src={TestDrive}\r\n            alt='Cover art of current remix'\r\n          />\r\n          <Box\r\n            id='remix-information'\r\n          >\r\n            <Box\r\n              display='flex'\r\n              flexDirection='column'\r\n            >\r\n              <Box\r\n                display='flex'\r\n                flexDirection='row'\r\n              >\r\n                <Box>\r\n                  <Typography id='remix-playing-title'>test drive</Typography>\r\n                  <Typography id='remix-playing-artist'>Ariana Grande</Typography>\r\n                </Box>\r\n                {playing ? \r\n                  <PauseIcon \r\n                    onClick = {() => handleSetPlaying()}\r\n                    style={{ \r\n                      'padding': '0.2em', \r\n                      'borderRadius': '20px', \r\n                      'alignSelf': 'center', \r\n                      color: 'white', \r\n                      'backgroundColor': '#1DB954'\r\n                    }}/> :\r\n                  <PlayArrowIcon onClick = {() => handleSetPlaying()} style={{ 'alignSelf': 'center',  'padding': '0.2em', 'borderRadius': '20px', color: 'white', 'backgroundColor': '#1DB954'}}/>}\r\n              </Box>\r\n              <Slider id='remix-playing-time' aria-label=\"Play time\" defaultValue={0} valueLabelDisplay=\"auto\" style={{ color: '#1DB954' }}/>\r\n            </Box>\r\n        </Box>\r\n      </Box>\r\n      \r\n      <Box\r\n        id='sliders'\r\n      >\r\n        <Box\r\n          className='slider'\r\n        >\r\n          <Box\r\n            display='flex'\r\n            flexDirection='column'\r\n            p={2}\r\n          >\r\n            <FontAwesomeIcon icon={faMicrophoneLines} className='icon'/>\r\n\r\n          </Box>\r\n          <input type=\"range\" id=\"vocal-volume\" min=\"0\" max=\"1\" defaultValue=\"0.5\" step=\"0.01\"/>\r\n        </Box>\r\n\r\n        <Box\r\n          className='slider'\r\n        >\r\n          <Box\r\n            display='flex'\r\n            flexDirection='column'\r\n            p={2}\r\n          >\r\n            <FontAwesomeIcon icon={faDrum} className='icon'/>\r\n          </Box>\r\n          <input type=\"range\" id=\"drums-volume\" min=\"0\" max=\"1\" defaultValue=\"0.5\" step=\"0.01\"/>\r\n        </Box>  \r\n        \r\n        <Box\r\n          className='slider'\r\n        >\r\n          <Box\r\n            display='flex'\r\n            flexDirection='column'\r\n            p={2}\r\n          >\r\n            <FontAwesomeIcon icon={faGuitar} className='icon'/>\r\n          </Box>\r\n          <input type=\"range\" id=\"bass-volume\" min=\"0\" max=\"1\" defaultValue=\"0.5\" step=\"0.01\"/>\r\n        </Box>\r\n        \r\n        <Box\r\n          className='slider'\r\n        >\r\n          <Box\r\n            display='flex'\r\n            flexDirection='column'\r\n            p={2}\r\n          >\r\n            <FontAwesomeIcon icon={faMusic} className='icon'/>\r\n          </Box>\r\n          <input type=\"range\" id=\"other-volume\" min=\"0\" max=\"1\" defaultValue=\"0.5\" step=\"0.01\"/>\r\n        </Box>\r\n      </Box>\r\n\r\n    </Box>\r\n  </Box>\r\n    )\r\n}\r\n\r\nexport default StemRemix;\r\n","import React, { FunctionComponent, ReactElement } from 'react';\r\nimport { \r\n  Box,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport '../../styling/remixComponent.css';\r\n\r\ntype RemixComponentProps = {\r\n  number: number,\r\n  cover: string,\r\n  title: string,\r\n  artist: string\r\n}\r\n\r\n\r\nconst RemixComponent: FunctionComponent<RemixComponentProps> = (props): ReactElement => {  \r\n  return(\r\n    <Box\r\n      id='remix-component'\r\n    >\r\n      <Box\r\n        id='song-information'\r\n      >\r\n        <Box\r\n          id='remix-number-cover'\r\n        >\r\n          <Typography id='number'>{props.number}</Typography>\r\n          <img\r\n            id='song-cover-art'\r\n            src={props.cover}\r\n            alt='Covert art of track'\r\n          />\r\n        </Box>\r\n        <Box\r\n          id='remix-title-artist'\r\n        >\r\n          <Typography id='title'>{props.title} </Typography>\r\n          <Typography id='artist'>{props.artist}</Typography>\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        id=\"dots\"\r\n      >\r\n        <span className=\"dot\"></span>\r\n        <span className=\"dot\"></span>\r\n        <span className=\"dot\"></span>\r\n      </Box>\r\n    </Box>\r\n    )\r\n}\r\n\r\n\r\nexport default RemixComponent;\r\n","import { \r\n  Box,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport '../../styling/library.css';\r\n\r\nimport RemixComponent from './remixComponent';\r\n\r\nimport Ctrl from '../test_drive.png';\r\n\r\nconst Library = () => {  \r\n  return(\r\n    <Box\r\n      id='library-window'\r\n    >\r\n      <Typography id='remixes-navigation'> Remixes </Typography>\r\n      <Typography id='remixes'>Remixes</Typography>\r\n      <Box\r\n        id='remix-container'\r\n      >\r\n        <RemixComponent \r\n          number={1} cover={Ctrl} title=\"test drive\" artist=\"Ariana Grande\"\r\n        />\r\n      </Box>\r\n    </Box>\r\n    )\r\n}\r\n\r\nexport default Library;\r\n","import { \r\n  Box\r\n} from '@material-ui/core';\r\n\r\nimport '../styling/window.css';\r\n\r\nimport Navigation from './navigation';\r\nimport Remix from './remix/stemRemix';\r\nimport Library from './library/library';\r\nimport CurrentlyPlayingMobile from './currentlyPlayingMobile';\r\n\r\nimport {\r\n  Routes,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nconst Window = () => {\r\n\r\n  return(\r\n    <Box\r\n      id='window-container'\r\n    >\r\n      <Box\r\n        id=\"window\"\r\n      >\r\n        <Routes>\r\n          <Route path=\"/\" element={<Remix />} />\r\n        </Routes>\r\n        <Routes>\r\n          <Route path=\"/remix\" element={<Remix />} />\r\n        </Routes>\r\n        <Routes>\r\n          <Route path=\"/library\" element={<Library />} />\r\n        </Routes>\r\n      </Box>\r\n      <Box\r\n        id='playing-and-navigation-container'\r\n      >\r\n        <Navigation/>\r\n      </Box>\r\n    </Box>\r\n    )\r\n}\r\n\r\nexport default Window;\r\n","import React, {useEffect} from 'react';\r\n\r\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nimport './App.css'; \r\nimport Window from './user_interface/window';\r\n\r\nconst theme = createTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      \"Arial\"\r\n    ].join(\",\")\r\n  }\r\n});\r\n\r\nconst App = () => {\r\n\r\n  // const createRemix = () => {\r\n  //   var xhr = new XMLHttpRequest()\r\n\r\n  //     xhr.addEventListener('load', () => {})\r\n\r\n  //     xhr.open('POST', 'http://localhost:5000/remix', false)\r\n  //     xhr.send()\r\n      \r\n  //     const responseBody = JSON.parse(xhr.response)\r\n\r\n  //     if (responseBody['response'] === 200){\r\n  //         const remixName = responseBody\r\n  //         console.log(remixName)\r\n  //         localStorage.setItem('remixName', remixName);\r\n  //     } else {\r\n  //         const errorMessage = responseBody['error']\r\n  //     }\r\n  // }\r\n\r\n  useEffect(() => {\r\n    // createRemix();\r\n}, []);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className=\"App\">\r\n        <Window/>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}